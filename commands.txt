#config file -> users -> User -> .gitconfig

#help
git help <command>

#cancel of indexing
git rm --cached FILE

# -a all file which changed or odd put to index. File goes to index 
# and then will change

git commit -a -m "message for commit"

#back up file
git checkout -- file

#watch was. q - for some problems
#git help log - open browser. Much variants
git log

# %h - short hash commit, $an - name, $ar -> git help
git log --pretty=format:"%h - %an, %ar : %s"

#for long projects -> want since 2 weeks changes
git log --since=2.weeks

#last commit and 2 last changes commits
git log -p -2

#without comment - open editor, exit - escape, : , x 
#open our own editor:
#git config --global core.editor "'C:\Program Files (x86)\Notepad++\notepad++.exe' -multInst -notabbar - nosession -noPlugin"
git commit

#create new branch
git checkout -b new_f #create and switch
git branch new_f2 #just create
git checkout new_f #switch to merge

#change tool for check merge conflicts
git config --global merge.tool kdiff3

#merge master branch to new_f
git merge master

#if conflicts exist
git mergetool

#install and set merge tool
git config --global mergetool.kdiff3.cmd '"D:\Programs\KDiff3\kdiff3" $BASE $LOCAL $REMOTE -o $MERGED'

#push to repository
# remote add = "we talk to git that we add new repository now."
# origin = "short title of reposit. We can use default"
# Link to rep.
git remote add origin https://github.com/Snakelive/git-project.git

#push our local commits to repository
#we push to repository with key -u for that repository next will be as default
#we use alias "origin" for this repository
git push -u origin master

#watch all reposits
git remote
git remote -v #fetch (where we get) and push (where we put)

#set push for branches
#Full mathcing
git config --global push.default matching

#Current branch
git config --global push.default simple